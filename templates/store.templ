package templates

import (
"fmt"
"go-store/types"
"time"
)

templ Store(products []types.Product) {
	<form id="store-form" method="POST" action="/purchase">
		<fieldset>
		<legend>Personal Info</legend>
			<label for="first-name">*First Name:</label><br>
			<input type="text" id="first-name" name="fName" value="Jane" pattern="[ A-Za-z']{1,32}" title="Name can only contain letters and apostrophies" required><br>

			<label for="last-name">*Last Name:</label><br>
			<input type="text" id="last-name" name="lName" value="Doe" pattern="[ A-Za-z']{1,32}" title="Name can only contain letters and apostrophies" required><br>

			<label for="email">*Email:</label><br>
			<input type="email" id="email" name="email" required><br>
		</fieldset>
		
		<fieldset>
			<legend>Product Info</legend>
			<label for="products">*Choose a product:</label>
        	<select id="products" name="productName" onchange="updateImage(this)" required>
				<option value="" disabled selected>Select an option</option>
				for _, prod := range products {
				<option value={fmt.Sprintf("%d", prod.ID)} data-stock={fmt.Sprintf("%d", prod.InStock)} data-image={prod.Image}>{ fmt.Sprintf("%s - %.2f", prod.Name,
					prod.Price) }</option>
            }
        	</select><br><br>
			<label for="quantity">Quantity:</label>
			<input type="number" id="quantity" name="quantity" value="1" min="1" max="100">
		</fieldset>


		<p>*Round up for charity?</p>
		<label for="yes">yes</label>
		<input type="radio" id="yes" name="rup" value="True">
		<label for="no">no</label>
		<input type="radio" id="no" name="rup" value="False" checked>

		<input type="submit" value="Submit">
		<input type="hidden" name="timestamp" value={ fmt.Sprintf("%d", time.Now().Unix()) }/>
	</form>
	<div id="product-view">
		<img id="productImg" src="" alt="Product Picture" width="400" height="500" onchange="updateImage()"></img>
		<p id="prodLabel"></p>
	</div>
	
}

templ PurchaseConfirmation(message string, purchaseInformation types.PurchaseInfo) {
<div>
	<p>{message}</p>
	<p>You have selected 
	{ fmt.Sprintf("%d %s Lamp(s) at %.2f each", purchaseInformation.Quantity, purchaseInformation.ProductName, purchaseInformation.ProductPrice) }.</p>
	<p>Subtotal: { fmt.Sprintf("$%.2f", purchaseInformation.SubTotal) }<br>
	Total with Tax &#40 8.75% &#41: { fmt.Sprintf("$%.2f", purchaseInformation.TotalTax) }</p>
	if purchaseInformation.RoundUp {
		<p>Total with donation &#40AKA my super sick tax writeoff &#41 : { fmt.Sprintf("$%.2f", purchaseInformation.TotalRound) }</p>
	}
	<p>Thank you for shopping at Fun Flower Lamps! Order again soon!</p>
</div>
}
